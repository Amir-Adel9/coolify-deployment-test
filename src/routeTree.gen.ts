/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthAuthImport } from './routes/_auth/_auth'
import { Route as dashboardDashboardImport } from './routes/(dashboard)/_dashboard'
import { Route as AuthAuthResetPasswordImport } from './routes/_auth/_auth.reset-password'
import { Route as AuthAuthLoginImport } from './routes/_auth/_auth.login'
import { Route as dashboardDashboardBlogCategoriesCategoryIdImport } from './routes/(dashboard)/_dashboard/blog/categories/$categoryId'

// Create Virtual Routes

const dashboardImport = createFileRoute('/(dashboard)')()
const dashboardDashboardIndexLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/',
)()
const dashboardDashboardUsersIndexLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/users/',
)()
const dashboardDashboardRolesIndexLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/roles/',
)()
const dashboardDashboardUsersCreateLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/users/create',
)()
const dashboardDashboardRolesCreateLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/roles/create',
)()
const dashboardDashboardRolesRoleIdLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/roles/$roleId',
)()
const dashboardDashboardBlogCategoriesIndexLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/blog/categories/',
)()
const dashboardDashboardBlogArticlesIndexLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/blog/articles/',
)()
const dashboardDashboardUsersEditUserIDLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/users/edit/$userID',
)()
const dashboardDashboardBlogCategoriesCreateLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/blog/categories/create',
)()
const dashboardDashboardBlogArticlesCreateLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/blog/articles/create',
)()
const dashboardDashboardBlogArticlesArticleIdLazyImport = createFileRoute(
  '/(dashboard)/_dashboard/blog/articles/$articleId',
)()

// Create/Update Routes

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth/_auth',
  getParentRoute: () => rootRoute,
} as any)

const dashboardDashboardRoute = dashboardDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => dashboardRoute,
} as any)

const dashboardDashboardIndexLazyRoute = dashboardDashboardIndexLazyImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => dashboardDashboardRoute,
  } as any)
  .lazy(() =>
    import('./routes/(dashboard)/_dashboard.index.lazy').then((d) => d.Route),
  )

const AuthAuthResetPasswordRoute = AuthAuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)

const dashboardDashboardUsersIndexLazyRoute =
  dashboardDashboardUsersIndexLazyImport
    .update({
      id: '/users/',
      path: '/users/',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/users/index.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardRolesIndexLazyRoute =
  dashboardDashboardRolesIndexLazyImport
    .update({
      id: '/roles/',
      path: '/roles/',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/roles/index.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardUsersCreateLazyRoute =
  dashboardDashboardUsersCreateLazyImport
    .update({
      id: '/users/create',
      path: '/users/create',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/users/create.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardRolesCreateLazyRoute =
  dashboardDashboardRolesCreateLazyImport
    .update({
      id: '/roles/create',
      path: '/roles/create',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/roles/create.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardRolesRoleIdLazyRoute =
  dashboardDashboardRolesRoleIdLazyImport
    .update({
      id: '/roles/$roleId',
      path: '/roles/$roleId',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/roles/$roleId.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardBlogCategoriesIndexLazyRoute =
  dashboardDashboardBlogCategoriesIndexLazyImport
    .update({
      id: '/blog/categories/',
      path: '/blog/categories/',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/blog/categories/index.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardBlogArticlesIndexLazyRoute =
  dashboardDashboardBlogArticlesIndexLazyImport
    .update({
      id: '/blog/articles/',
      path: '/blog/articles/',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/blog/articles/index.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardUsersEditUserIDLazyRoute =
  dashboardDashboardUsersEditUserIDLazyImport
    .update({
      id: '/users/edit/$userID',
      path: '/users/edit/$userID',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/users/edit.$userID.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardBlogCategoriesCreateLazyRoute =
  dashboardDashboardBlogCategoriesCreateLazyImport
    .update({
      id: '/blog/categories/create',
      path: '/blog/categories/create',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import(
        './routes/(dashboard)/_dashboard/blog/categories/create.lazy'
      ).then((d) => d.Route),
    )

const dashboardDashboardBlogArticlesCreateLazyRoute =
  dashboardDashboardBlogArticlesCreateLazyImport
    .update({
      id: '/blog/articles/create',
      path: '/blog/articles/create',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import('./routes/(dashboard)/_dashboard/blog/articles/create.lazy').then(
        (d) => d.Route,
      ),
    )

const dashboardDashboardBlogArticlesArticleIdLazyRoute =
  dashboardDashboardBlogArticlesArticleIdLazyImport
    .update({
      id: '/blog/articles/$articleId',
      path: '/blog/articles/$articleId',
      getParentRoute: () => dashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import(
        './routes/(dashboard)/_dashboard/blog/articles/$articleId.lazy'
      ).then((d) => d.Route),
    )

const dashboardDashboardBlogCategoriesCategoryIdRoute =
  dashboardDashboardBlogCategoriesCategoryIdImport.update({
    id: '/blog/categories/$categoryId',
    path: '/blog/categories/$categoryId',
    getParentRoute: () => dashboardDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_dashboard': {
      id: '/(dashboard)/_dashboard'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardDashboardImport
      parentRoute: typeof dashboardRoute
    }
    '/_auth/_auth': {
      id: '/_auth/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_auth/login': {
      id: '/_auth/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/reset-password': {
      id: '/_auth/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthAuthResetPasswordImport
      parentRoute: typeof AuthAuthImport
    }
    '/(dashboard)/_dashboard/': {
      id: '/(dashboard)/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardDashboardIndexLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/roles/$roleId': {
      id: '/(dashboard)/_dashboard/roles/$roleId'
      path: '/roles/$roleId'
      fullPath: '/roles/$roleId'
      preLoaderRoute: typeof dashboardDashboardRolesRoleIdLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/roles/create': {
      id: '/(dashboard)/_dashboard/roles/create'
      path: '/roles/create'
      fullPath: '/roles/create'
      preLoaderRoute: typeof dashboardDashboardRolesCreateLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/users/create': {
      id: '/(dashboard)/_dashboard/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof dashboardDashboardUsersCreateLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/roles/': {
      id: '/(dashboard)/_dashboard/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof dashboardDashboardRolesIndexLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/users/': {
      id: '/(dashboard)/_dashboard/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof dashboardDashboardUsersIndexLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/categories/$categoryId': {
      id: '/(dashboard)/_dashboard/blog/categories/$categoryId'
      path: '/blog/categories/$categoryId'
      fullPath: '/blog/categories/$categoryId'
      preLoaderRoute: typeof dashboardDashboardBlogCategoriesCategoryIdImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/articles/$articleId': {
      id: '/(dashboard)/_dashboard/blog/articles/$articleId'
      path: '/blog/articles/$articleId'
      fullPath: '/blog/articles/$articleId'
      preLoaderRoute: typeof dashboardDashboardBlogArticlesArticleIdLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/articles/create': {
      id: '/(dashboard)/_dashboard/blog/articles/create'
      path: '/blog/articles/create'
      fullPath: '/blog/articles/create'
      preLoaderRoute: typeof dashboardDashboardBlogArticlesCreateLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/categories/create': {
      id: '/(dashboard)/_dashboard/blog/categories/create'
      path: '/blog/categories/create'
      fullPath: '/blog/categories/create'
      preLoaderRoute: typeof dashboardDashboardBlogCategoriesCreateLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/users/edit/$userID': {
      id: '/(dashboard)/_dashboard/users/edit/$userID'
      path: '/users/edit/$userID'
      fullPath: '/users/edit/$userID'
      preLoaderRoute: typeof dashboardDashboardUsersEditUserIDLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/articles/': {
      id: '/(dashboard)/_dashboard/blog/articles/'
      path: '/blog/articles'
      fullPath: '/blog/articles'
      preLoaderRoute: typeof dashboardDashboardBlogArticlesIndexLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
    '/(dashboard)/_dashboard/blog/categories/': {
      id: '/(dashboard)/_dashboard/blog/categories/'
      path: '/blog/categories'
      fullPath: '/blog/categories'
      preLoaderRoute: typeof dashboardDashboardBlogCategoriesIndexLazyImport
      parentRoute: typeof dashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface dashboardDashboardRouteChildren {
  dashboardDashboardIndexLazyRoute: typeof dashboardDashboardIndexLazyRoute
  dashboardDashboardRolesRoleIdLazyRoute: typeof dashboardDashboardRolesRoleIdLazyRoute
  dashboardDashboardRolesCreateLazyRoute: typeof dashboardDashboardRolesCreateLazyRoute
  dashboardDashboardUsersCreateLazyRoute: typeof dashboardDashboardUsersCreateLazyRoute
  dashboardDashboardRolesIndexLazyRoute: typeof dashboardDashboardRolesIndexLazyRoute
  dashboardDashboardUsersIndexLazyRoute: typeof dashboardDashboardUsersIndexLazyRoute
  dashboardDashboardBlogCategoriesCategoryIdRoute: typeof dashboardDashboardBlogCategoriesCategoryIdRoute
  dashboardDashboardBlogArticlesArticleIdLazyRoute: typeof dashboardDashboardBlogArticlesArticleIdLazyRoute
  dashboardDashboardBlogArticlesCreateLazyRoute: typeof dashboardDashboardBlogArticlesCreateLazyRoute
  dashboardDashboardBlogCategoriesCreateLazyRoute: typeof dashboardDashboardBlogCategoriesCreateLazyRoute
  dashboardDashboardUsersEditUserIDLazyRoute: typeof dashboardDashboardUsersEditUserIDLazyRoute
  dashboardDashboardBlogArticlesIndexLazyRoute: typeof dashboardDashboardBlogArticlesIndexLazyRoute
  dashboardDashboardBlogCategoriesIndexLazyRoute: typeof dashboardDashboardBlogCategoriesIndexLazyRoute
}

const dashboardDashboardRouteChildren: dashboardDashboardRouteChildren = {
  dashboardDashboardIndexLazyRoute: dashboardDashboardIndexLazyRoute,
  dashboardDashboardRolesRoleIdLazyRoute:
    dashboardDashboardRolesRoleIdLazyRoute,
  dashboardDashboardRolesCreateLazyRoute:
    dashboardDashboardRolesCreateLazyRoute,
  dashboardDashboardUsersCreateLazyRoute:
    dashboardDashboardUsersCreateLazyRoute,
  dashboardDashboardRolesIndexLazyRoute: dashboardDashboardRolesIndexLazyRoute,
  dashboardDashboardUsersIndexLazyRoute: dashboardDashboardUsersIndexLazyRoute,
  dashboardDashboardBlogCategoriesCategoryIdRoute:
    dashboardDashboardBlogCategoriesCategoryIdRoute,
  dashboardDashboardBlogArticlesArticleIdLazyRoute:
    dashboardDashboardBlogArticlesArticleIdLazyRoute,
  dashboardDashboardBlogArticlesCreateLazyRoute:
    dashboardDashboardBlogArticlesCreateLazyRoute,
  dashboardDashboardBlogCategoriesCreateLazyRoute:
    dashboardDashboardBlogCategoriesCreateLazyRoute,
  dashboardDashboardUsersEditUserIDLazyRoute:
    dashboardDashboardUsersEditUserIDLazyRoute,
  dashboardDashboardBlogArticlesIndexLazyRoute:
    dashboardDashboardBlogArticlesIndexLazyRoute,
  dashboardDashboardBlogCategoriesIndexLazyRoute:
    dashboardDashboardBlogCategoriesIndexLazyRoute,
}

const dashboardDashboardRouteWithChildren =
  dashboardDashboardRoute._addFileChildren(dashboardDashboardRouteChildren)

interface dashboardRouteChildren {
  dashboardDashboardRoute: typeof dashboardDashboardRouteWithChildren
}

const dashboardRouteChildren: dashboardRouteChildren = {
  dashboardDashboardRoute: dashboardDashboardRouteWithChildren,
}

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
)

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthResetPasswordRoute: typeof AuthAuthResetPasswordRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthResetPasswordRoute: AuthAuthResetPasswordRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof dashboardDashboardIndexLazyRoute
  '': typeof AuthAuthRouteWithChildren
  '/login': typeof AuthAuthLoginRoute
  '/reset-password': typeof AuthAuthResetPasswordRoute
  '/roles/$roleId': typeof dashboardDashboardRolesRoleIdLazyRoute
  '/roles/create': typeof dashboardDashboardRolesCreateLazyRoute
  '/users/create': typeof dashboardDashboardUsersCreateLazyRoute
  '/roles': typeof dashboardDashboardRolesIndexLazyRoute
  '/users': typeof dashboardDashboardUsersIndexLazyRoute
  '/blog/categories/$categoryId': typeof dashboardDashboardBlogCategoriesCategoryIdRoute
  '/blog/articles/$articleId': typeof dashboardDashboardBlogArticlesArticleIdLazyRoute
  '/blog/articles/create': typeof dashboardDashboardBlogArticlesCreateLazyRoute
  '/blog/categories/create': typeof dashboardDashboardBlogCategoriesCreateLazyRoute
  '/users/edit/$userID': typeof dashboardDashboardUsersEditUserIDLazyRoute
  '/blog/articles': typeof dashboardDashboardBlogArticlesIndexLazyRoute
  '/blog/categories': typeof dashboardDashboardBlogCategoriesIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthAuthRouteWithChildren
  '/login': typeof AuthAuthLoginRoute
  '/reset-password': typeof AuthAuthResetPasswordRoute
  '/': typeof dashboardDashboardIndexLazyRoute
  '/roles/$roleId': typeof dashboardDashboardRolesRoleIdLazyRoute
  '/roles/create': typeof dashboardDashboardRolesCreateLazyRoute
  '/users/create': typeof dashboardDashboardUsersCreateLazyRoute
  '/roles': typeof dashboardDashboardRolesIndexLazyRoute
  '/users': typeof dashboardDashboardUsersIndexLazyRoute
  '/blog/categories/$categoryId': typeof dashboardDashboardBlogCategoriesCategoryIdRoute
  '/blog/articles/$articleId': typeof dashboardDashboardBlogArticlesArticleIdLazyRoute
  '/blog/articles/create': typeof dashboardDashboardBlogArticlesCreateLazyRoute
  '/blog/categories/create': typeof dashboardDashboardBlogCategoriesCreateLazyRoute
  '/users/edit/$userID': typeof dashboardDashboardUsersEditUserIDLazyRoute
  '/blog/articles': typeof dashboardDashboardBlogArticlesIndexLazyRoute
  '/blog/categories': typeof dashboardDashboardBlogCategoriesIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(dashboard)': typeof dashboardRouteWithChildren
  '/(dashboard)/_dashboard': typeof dashboardDashboardRouteWithChildren
  '/_auth/_auth': typeof AuthAuthRouteWithChildren
  '/_auth/_auth/login': typeof AuthAuthLoginRoute
  '/_auth/_auth/reset-password': typeof AuthAuthResetPasswordRoute
  '/(dashboard)/_dashboard/': typeof dashboardDashboardIndexLazyRoute
  '/(dashboard)/_dashboard/roles/$roleId': typeof dashboardDashboardRolesRoleIdLazyRoute
  '/(dashboard)/_dashboard/roles/create': typeof dashboardDashboardRolesCreateLazyRoute
  '/(dashboard)/_dashboard/users/create': typeof dashboardDashboardUsersCreateLazyRoute
  '/(dashboard)/_dashboard/roles/': typeof dashboardDashboardRolesIndexLazyRoute
  '/(dashboard)/_dashboard/users/': typeof dashboardDashboardUsersIndexLazyRoute
  '/(dashboard)/_dashboard/blog/categories/$categoryId': typeof dashboardDashboardBlogCategoriesCategoryIdRoute
  '/(dashboard)/_dashboard/blog/articles/$articleId': typeof dashboardDashboardBlogArticlesArticleIdLazyRoute
  '/(dashboard)/_dashboard/blog/articles/create': typeof dashboardDashboardBlogArticlesCreateLazyRoute
  '/(dashboard)/_dashboard/blog/categories/create': typeof dashboardDashboardBlogCategoriesCreateLazyRoute
  '/(dashboard)/_dashboard/users/edit/$userID': typeof dashboardDashboardUsersEditUserIDLazyRoute
  '/(dashboard)/_dashboard/blog/articles/': typeof dashboardDashboardBlogArticlesIndexLazyRoute
  '/(dashboard)/_dashboard/blog/categories/': typeof dashboardDashboardBlogCategoriesIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/reset-password'
    | '/roles/$roleId'
    | '/roles/create'
    | '/users/create'
    | '/roles'
    | '/users'
    | '/blog/categories/$categoryId'
    | '/blog/articles/$articleId'
    | '/blog/articles/create'
    | '/blog/categories/create'
    | '/users/edit/$userID'
    | '/blog/articles'
    | '/blog/categories'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/reset-password'
    | '/'
    | '/roles/$roleId'
    | '/roles/create'
    | '/users/create'
    | '/roles'
    | '/users'
    | '/blog/categories/$categoryId'
    | '/blog/articles/$articleId'
    | '/blog/articles/create'
    | '/blog/categories/create'
    | '/users/edit/$userID'
    | '/blog/articles'
    | '/blog/categories'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/(dashboard)/_dashboard'
    | '/_auth/_auth'
    | '/_auth/_auth/login'
    | '/_auth/_auth/reset-password'
    | '/(dashboard)/_dashboard/'
    | '/(dashboard)/_dashboard/roles/$roleId'
    | '/(dashboard)/_dashboard/roles/create'
    | '/(dashboard)/_dashboard/users/create'
    | '/(dashboard)/_dashboard/roles/'
    | '/(dashboard)/_dashboard/users/'
    | '/(dashboard)/_dashboard/blog/categories/$categoryId'
    | '/(dashboard)/_dashboard/blog/articles/$articleId'
    | '/(dashboard)/_dashboard/blog/articles/create'
    | '/(dashboard)/_dashboard/blog/categories/create'
    | '/(dashboard)/_dashboard/users/edit/$userID'
    | '/(dashboard)/_dashboard/blog/articles/'
    | '/(dashboard)/_dashboard/blog/categories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  dashboardRoute: typeof dashboardRouteWithChildren
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  dashboardRoute: dashboardRouteWithChildren,
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(dashboard)",
        "/_auth/_auth"
      ]
    },
    "/(dashboard)": {
      "filePath": "(dashboard)",
      "children": [
        "/(dashboard)/_dashboard"
      ]
    },
    "/(dashboard)/_dashboard": {
      "filePath": "(dashboard)/_dashboard.tsx",
      "parent": "/(dashboard)",
      "children": [
        "/(dashboard)/_dashboard/",
        "/(dashboard)/_dashboard/roles/$roleId",
        "/(dashboard)/_dashboard/roles/create",
        "/(dashboard)/_dashboard/users/create",
        "/(dashboard)/_dashboard/roles/",
        "/(dashboard)/_dashboard/users/",
        "/(dashboard)/_dashboard/blog/categories/$categoryId",
        "/(dashboard)/_dashboard/blog/articles/$articleId",
        "/(dashboard)/_dashboard/blog/articles/create",
        "/(dashboard)/_dashboard/blog/categories/create",
        "/(dashboard)/_dashboard/users/edit/$userID",
        "/(dashboard)/_dashboard/blog/articles/",
        "/(dashboard)/_dashboard/blog/categories/"
      ]
    },
    "/_auth/_auth": {
      "filePath": "_auth/_auth.tsx",
      "children": [
        "/_auth/_auth/login",
        "/_auth/_auth/reset-password"
      ]
    },
    "/_auth/_auth/login": {
      "filePath": "_auth/_auth.login.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/reset-password": {
      "filePath": "_auth/_auth.reset-password.tsx",
      "parent": "/_auth/_auth"
    },
    "/(dashboard)/_dashboard/": {
      "filePath": "(dashboard)/_dashboard.index.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/roles/$roleId": {
      "filePath": "(dashboard)/_dashboard/roles/$roleId.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/roles/create": {
      "filePath": "(dashboard)/_dashboard/roles/create.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/users/create": {
      "filePath": "(dashboard)/_dashboard/users/create.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/roles/": {
      "filePath": "(dashboard)/_dashboard/roles/index.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/users/": {
      "filePath": "(dashboard)/_dashboard/users/index.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/categories/$categoryId": {
      "filePath": "(dashboard)/_dashboard/blog/categories/$categoryId.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/articles/$articleId": {
      "filePath": "(dashboard)/_dashboard/blog/articles/$articleId.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/articles/create": {
      "filePath": "(dashboard)/_dashboard/blog/articles/create.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/categories/create": {
      "filePath": "(dashboard)/_dashboard/blog/categories/create.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/users/edit/$userID": {
      "filePath": "(dashboard)/_dashboard/users/edit.$userID.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/articles/": {
      "filePath": "(dashboard)/_dashboard/blog/articles/index.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    },
    "/(dashboard)/_dashboard/blog/categories/": {
      "filePath": "(dashboard)/_dashboard/blog/categories/index.lazy.tsx",
      "parent": "/(dashboard)/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
